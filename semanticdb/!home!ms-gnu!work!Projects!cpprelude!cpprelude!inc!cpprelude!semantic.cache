;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("cpprelude/defines.h" include nil nil [15 45])
            ("cpprelude/tmp.h" include nil nil [46 72])
            ("cstdlib" include (:system-flag t) nil [74 92])
            ("cpprelude" type
               (:members 
                  ( ("slice" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("ptr" variable
                               (:pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [218 225])
                            ("size" variable (:type ("usize" type (:type "class") nil nil)) (reparse-symbol classsubparts) [228 239])
                            ("slice" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ptr_" variable
                                       (:pointer 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [249 257])
                                    ("size_" variable (:type ("usize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [258 270]))                                  
                                :type ("slice" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [243 302])
                            ("slice" function
                               (:constructor-flag t
                                :type ("slice" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [306 344])
                            ("slice" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("slice" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [447 454])
                                    ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [455 461]))                                  
                                :type ("slice" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [441 549])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("slice" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [572 579])
                                    ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [580 586]))                                  
                                :type ("slice" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [553 697])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("slice" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [719 738]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [701 802])
                            ("!=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("slice" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [824 843]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [806 887])
                            ("[]" function
                               (:methodconst-flag t
                                :operator-flag t
                                :constant-flag t
                                :arguments 
                                  ( ("index" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("usize" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [953 972]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [931 1008])
                            ("[]" function
                               (:operator-flag t
                                :arguments 
                                  ( ("index" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("usize" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1028 1047]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1012 1077])
                            ("count" function
                               (:methodconst-flag t
                                :type ("usize" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1081 1138])
                            ("convert" function
                               (:template 
                                  ( ("R" type (:type "class") nil nil))                                  
                                :type ("slice" type
                                     (:template-specifier 
                                        ( ("R" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [1142 1252])
                            ("cut" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("start" variable
                                       (:default-value "0"
                                        :type ("usize" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1271 1286])
                                    ("count" variable
                                       (:default-value "0"
                                        :type ("usize" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1288 1303]))                                  
                                :type ("slice" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [1256 1417])
                            ("cut_bytes" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("offset" variable
                                       (:default-value "0"
                                        :type ("usize" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1442 1458])
                                    ("new_size" variable
                                       (:default-value "0"
                                        :type ("usize" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1460 1478]))                                  
                                :type ("slice" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [1421 1635])
                            ("cut_bytes" function
                               (:template 
                                  ( ("R" type (:type "class") nil nil))                                  
                                :type ("slice" type
                                     (:template-specifier 
                                        ( ("R" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("offset" variable
                                       (:default-value "0"
                                        :type ("usize" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1683 1699])
                                    ("new_size" variable
                                       (:default-value "0"
                                        :type ("usize" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1701 1719]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [1639 1876]))                          )
                        (reparse-symbol namespacesubparts) [178 1880])
                    ("make_slice" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("slice" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1926 1933])
                            ("count" variable
                               (:default-value "1"
                                :type ("usize" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1934 1949]))                          )
                        (reparse-symbol namespacesubparts) [1883 1997])
                    ("virtual_alloc" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("slice" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("count" variable
                               (:default-value "1"
                                :type ("usize" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2046 2061]))                          )
                        (reparse-symbol namespacesubparts) [2000 2395])
                    ("virtual_free" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("slice_" variable
                               (:reference 1
                                :type ("slice" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2439 2456]))                          )
                        (reparse-symbol namespacesubparts) [2398 2497])
                    ("virtual_free" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("slice" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2541 2551])
                            ("" variable (:type ("slice_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2552 2559]))                          )
                        (reparse-symbol namespacesubparts) [2500 2745])
                    ("alloc" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("slice" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("count" variable
                               (:default-value "1"
                                :type ("usize" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2786 2801])
                            ("alignment" variable
                               (:default-value "4"
                                :type ("ubyte" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2803 2822]))                          )
                        (reparse-symbol namespacesubparts) [2748 2986])
                    ("free" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("slice_" variable
                               (:reference 1
                                :type ("slice" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3022 3039]))                          )
                        (reparse-symbol namespacesubparts) [2989 3072])
                    ("free" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("slice" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3108 3118])
                            ("" variable (:type ("slice_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3119 3126]))                          )
                        (reparse-symbol namespacesubparts) [3075 3230])
                    ("realloc" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("slice_" variable
                               (:reference 1
                                :type ("slice" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3269 3286])
                            ("count" variable (:type ("usize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3287 3299]))                          )
                        (reparse-symbol namespacesubparts) [3233 3342])
                    ("realloc" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("slice" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3381 3391])
                            ("" variable (:type ("slice_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3392 3399])
                            ("count" variable (:type ("usize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3400 3412]))                          )
                        (reparse-symbol namespacesubparts) [3345 3598]))                  
                :type "namespace")
                nil [155 3601]))          
      :file "memory.h"
      :pointmax 3602
      :fsize 3601
      :lastmodtime '(22857 46353 225839 500000)
      :unmatched-syntax '((punctuation 3390 . 3391) (punctuation 3117 . 3118) (punctuation 2550 . 2551) (semantic-list 907 . 927) (semantic-list 902 . 904) (punctuation 901 . 902) (symbol 900 . 901) (OPERATOR 891 . 899) (punctuation 578 . 579) (punctuation 453 . 454) (punctuation 436 . 437) (DEFAULT 429 . 436) (punctuation 427 . 428) (semantic-list 406 . 426) (punctuation 405 . 406) (OPERATOR 397 . 405) (punctuation 393 . 394) (symbol 388 . 393) (punctuation 383 . 384) (DEFAULT 376 . 383) (punctuation 374 . 375) (semantic-list 353 . 373) (symbol 348 . 353) (symbol 9 . 13) (symbol 2 . 8) (punctuation 1 . 2)))
    (semanticdb-table "semanticdb-table"
      :file "defines.h"
      :fsize 1429
      :lastmodtime '(22852 17998 440740 500000))
    (semanticdb-table "semanticdb-table"
      :file "tmp.h"
      :fsize 1050
      :lastmodtime '(22852 15680 954966 500000)))
  :file "!home!ms-gnu!work!Projects!cpprelude!cpprelude!inc!cpprelude!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
